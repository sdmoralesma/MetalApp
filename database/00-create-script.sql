CREATE TABLE users (
  USERNAME   VARCHAR(50) NOT NULL UNIQUE,
  user_type  VARCHAR(31),
  GROUP_NAME VARCHAR(50) NOT NULL,
  PASSWORD   VARCHAR(50) NOT NULL,
  PRIMARY KEY (USERNAME)
);

CREATE TABLE admin (
  USERNAME    VARCHAR(50)  NOT NULL,
  DESCRIPTION VARCHAR(100) NOT NULL,
  NAME        VARCHAR(100) NOT NULL,
  PRIMARY KEY (USERNAME)
);

CREATE TABLE artist (
  NAME        VARCHAR(50) NOT NULL,
  DESCRIPTION VARCHAR(50),
  PRIMARY KEY (NAME)
);

CREATE TABLE gender (
  NAME       VARCHAR(50) NOT NULL,
  hand_value INTEGER     NOT NULL,
  head_value INTEGER     NOT NULL,
  PRIMARY KEY (NAME)
);

CREATE TABLE jury (
  USERNAME    VARCHAR(50)  NOT NULL,
  DESCRIPTION VARCHAR(100) NOT NULL,
  NAME        VARCHAR(100) NOT NULL,
  PRIMARY KEY (USERNAME)
);

CREATE TABLE participant (
  USERNAME  VARCHAR(50)  NOT NULL,
  AGE       INTEGER      NOT NULL,
  COUNTRY   VARCHAR(50)  NOT NULL,
  GENDER    VARCHAR(50)  NOT NULL,
  IMAGE_URL VARCHAR(100),
  NAME      VARCHAR(100) NOT NULL,
  PRIMARY KEY (USERNAME)
);

CREATE TABLE presentation (
  id_presentation INTEGER AUTO_INCREMENT NOT NULL UNIQUE,
  hand_score      FLOAT                  NOT NULL,
  head_score      FLOAT                  NOT NULL,
  total_score     FLOAT                  NOT NULL,
  username        VARCHAR(50)            NOT NULL,
  id_song         VARCHAR(100)           NOT NULL,
  PRIMARY KEY (id_presentation)
);

CREATE TABLE score_matrix (
  id_score_matrix INTEGER AUTO_INCREMENT NOT NULL,
  HAND1           INTEGER,
  HAND10          INTEGER,
  HAND2           INTEGER,
  HAND3           INTEGER,
  HAND4           INTEGER,
  HAND5           INTEGER,
  HAND6           INTEGER,
  HAND7           INTEGER,
  HAND8           INTEGER,
  HAND9           INTEGER,
  HEAD1           INTEGER,
  HEAD10          INTEGER,
  HEAD2           INTEGER,
  HEAD3           INTEGER,
  HEAD4           INTEGER,
  HEAD5           INTEGER,
  HEAD6           INTEGER,
  HEAD7           INTEGER,
  HEAD8           INTEGER,
  HEAD9           INTEGER,
  total_score     FLOAT,
  username        VARCHAR(50)            NOT NULL,
  PRIMARY KEY (id_score_matrix)
);

CREATE TABLE song (
  TITLE     VARCHAR(100) NOT NULL,
  id_artist VARCHAR(50)  NOT NULL,
  id_gender VARCHAR(50)  NOT NULL,
  PRIMARY KEY (TITLE)
);

CREATE TABLE song_matrix (
  id_song_matrix INTEGER AUTO_INCREMENT NOT NULL,
  COMPOSITION1   INTEGER,
  COMPOSITION10  INTEGER,
  COMPOSITION2   INTEGER,
  COMPOSITION3   INTEGER,
  COMPOSITION4   INTEGER,
  COMPOSITION5   INTEGER,
  COMPOSITION6   INTEGER,
  COMPOSITION7   INTEGER,
  COMPOSITION8   INTEGER,
  COMPOSITION9   INTEGER,
  MUSICALITY1    INTEGER,
  MUSICALITY10   INTEGER,
  MUSICALITY2    INTEGER,
  MUSICALITY3    INTEGER,
  MUSICALITY4    INTEGER,
  MUSICALITY5    INTEGER,
  MUSICALITY6    INTEGER,
  MUSICALITY7    INTEGER,
  MUSICALITY8    INTEGER,
  MUSICALITY9    INTEGER,
  total_score    FLOAT,
  title          VARCHAR(100)           NOT NULL,
  PRIMARY KEY (id_song_matrix)
);

ALTER TABLE admin ADD CONSTRAINT FK_admin_USERNAME FOREIGN KEY (USERNAME) REFERENCES users (USERNAME);
ALTER TABLE jury ADD CONSTRAINT FK_jury_USERNAME FOREIGN KEY (USERNAME) REFERENCES users (USERNAME);
ALTER TABLE participant ADD CONSTRAINT FK_participant_USERNAME FOREIGN KEY (USERNAME) REFERENCES users (USERNAME);
ALTER TABLE presentation ADD CONSTRAINT FK_presentation_id_song FOREIGN KEY (id_song) REFERENCES song (TITLE);
ALTER TABLE presentation ADD CONSTRAINT FK_presentation_username FOREIGN KEY (username) REFERENCES users (USERNAME);
ALTER TABLE score_matrix ADD CONSTRAINT FK_score_matrix_username FOREIGN KEY (username) REFERENCES users (USERNAME);
ALTER TABLE song ADD CONSTRAINT FK_song_id_gender FOREIGN KEY (id_gender) REFERENCES gender (NAME);
ALTER TABLE song ADD CONSTRAINT FK_song_id_artist FOREIGN KEY (id_artist) REFERENCES artist (NAME);
ALTER TABLE song_matrix ADD CONSTRAINT FK_song_matrix_title FOREIGN KEY (title) REFERENCES song (TITLE);
